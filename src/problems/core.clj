(ns problems.core
  (:gen-class))

(defn problem1 []
  (println " If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.  Find the sum of all the multiples of 3 or 5 below 1000. ")
  (reduce + (filter #(or (zero? (mod % 3)) (zero? (mod % 5))) (range 1 1000))))

(defn problem2 []
  (println " Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.  ")
  (let [nums (loop [x [1 2]
                    new 3]
               (if (<= new 4000000)
                 (recur (conj x new) (+ (last x) new))
                 x))]
    (reduce + (filter even? nums))))

(defn -main
  "I don't do a whole lot ... yet."
  [& args]
  (problem2))
